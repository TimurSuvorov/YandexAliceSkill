import random

from mainapp.processing.db.extract_json import get_db_sentences, get_db_sounds
from mainapp.processing.handle_sessionfile import get_qa_session_sentence
from mainapp.processing.handle_userprofile import update_scores
from mainapp.processing.handlers.proc_response_obj import (
    generate_var_string,
    generate_var_buttons,
    tts_prompt_sound,
    remove_tts_symbols,
)


def stupid_replies(command: str, session_state: dict, user_id: str, session_id: str):
    """
    –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –æ—Ç–≤–µ—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –∫–æ—Ä—Ä–µ–ª–∏—Ä—É–µ—Ç –Ω–∏ —Å –æ–¥–Ω–∏–º –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.
    –ü—Ä–æ–∏–∑–Ω–æ—Å–∏—Ç—Å—è –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–∞—è —Ñ—Ä–∞–∑–∞ –∏ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è –≤–æ–ø—Ä–æ—Å.
    """
    sentences = get_db_sentences()
    postsentence = random.choice(sentences["POSTsentence"])

    sounds = get_db_sounds()
    hmmmsound = random.choice(sounds["HMMM"])


    question_dict = session_state["question_dict"]
    question_body = question_dict["sentence"]
    question_variants = question_dict["variants"][:3]
    variants = generate_var_string(question_variants)

    unrecognized_attempt = session_state.setdefault("unrecognized_attempt", 0)
    # if not session_state.get("unrecognized_attempt"):
    #     session_state["unrecognized_attempt"] = 0
    # unrecognized_attempt = session_state.get("unrecognized_attempt")
    if unrecognized_attempt < 2:

        unrecognized_phrases = [
            "–í—Ä+–æ–¥–µ, —É–º–Ω—ã–π, –∞ –≥–æ–≤–æ—Ä–∏—à—å –Ω–µ –≤–ø–æ–ø+–∞–¥. sil <[100]>–î–∞–≤+–∞–π –µ—â—ë —Ä–∞–∑ –∏ –ø–æ—Ä–∞–∑–±–æ—Ä—á–∏–≤–µ–π. –ü–æ–≤—Ç–æ—Ä—é –≤–æ–ø—Ä–æ—Å–∏–∫.",
            "–ù–µ–æ–∂+–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç. sil <[100]>–ü–æ–ø—Ä–æ–±—É–π —Å–∫–∞–∑–∞—Ç—å –ø–æ—Ä–∞–∑–±+–æ—Ä—á–∏–≤–µ–π. –ù–∞–ø–æ–º–Ω—é –≤–æ–ø—Ä–æ—Å –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã.",
            "–ü–ª–æ—Ö–æ —Ä–∞—Å—Å–ª+—ã—à–∞–ª–∞ —Ç–µ–±—è sil <[70]>–∏–ª–∏ —Ç—ã –æ–ø+—è—Ç—å –≥–æ–≤–æ—Ä–∏—à—å —Å–æ —Å–≤–æ–∏–º –∫–æ—Ç+–æ–º. sil <[100]>–ü–æ–≤—Ç–æ—Ä+–∏–º.",
            "–í–æ—Ç —Ç—É—Ç —è –∑–∞–≤–∏—Å–ª–∞. sil <[100]>–¢—ã —Ç–æ—á–Ω–æ –æ—Ç–≤–µ—á–∞–µ—à—å –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å? sil <[100]>–ù–∞–ø–æ–º–Ω—é –µ—â—ë —Ä–∞–∑–æ–∫.",
            "–¢—É—Ç –¥–∞–∂–µ –Ω–µ—Ç —Ç–∞–∫–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∏–ª–∏ –º–Ω–µ –ø–æ–∫–∞–∑–∞–ª–æ—Å—å.sil <[100]> –ü–æ—Å—Ç–∞—Ä–∞–π—Å—è –≥–æ–≤–æ—Ä–∏—Ç—å —á—ë—Ç–∫–æ. sil <[100]>–î–∞–≤–∞–π –µ—â–µ —Ä–∞–∑.",
            "–ò–ª–∏ —è —Å–æ–≤—Å–µ–º —Å—Ç–∞—Ä–∞ sil <[80]>–∏ –Ω–µ —Ä–∞—Å—Å–ª—ã—à–∞–ª–∞ —Å–ª–æ–≤–æ, sil <[80]>–ª+–∏–±–æ —Ç—ã –æ –¥—Ä—É–≥–æ–º. sil <[100]>–ü–æ–≤—Ç–æ—Ä—é —Ç–µ–±–µ –≤–æ–ø—Ä–æ—Å.",
            "–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞.sil <[100]> –ù–∞–≤–µ—Ä–Ω–æ–µ, —Ç—ã –ø–µ—Ä–µ–ø—É—Ç–∞–ª —Å –¥—Ä—É–≥–∏–º –≤–æ–ø—Ä–æ—Å–æ–º. sil <[100]>–ê –º–æ–π –±—ã–ª —Å–ª–µ–¥—É—é—â–∏–π.",
            "–¢—ã —É–≤+–µ—Ä–µ–Ω, —á—Ç–æ —ç—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ –º+–æ–π –≤–æ–ø—Ä–æ—Å? sil <[100]>–ü–æ—Å—Ç–∞—Ä–∞–π—Å—è –≥–æ–≤–æ—Ä–∏—Ç—å —á—ë—Ç–∫–æ. sil <[100]>–î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.",
            "–ù–µ –≤–∏–∂—É –≤ —ç—Ç–æ–º –ª–æ–≥–∏–∫–∏. sil <[100]>–ü–æ–≤—Ç–æ—Ä—é –≤–æ–ø—Ä–æ—Å–∏–∫.",
            "–ò–Ω–æ–≥–¥–∞ —è —Å–ª—ã—à—É –ø–æ-–¥—Ä—É–≥–æ–º—É. –ü–æ—Ö–æ–∂–µ, —ç—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ –∏ —Å–µ–π—á–∞—Å. –ù–æ –≤–æ–ø—Ä–æ—Å –ø–æ–≤—Ç–æ—Ä—é –≤—Å—ë –∂–µ.",
            "–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Å–º—ã—Å–ª–∞ –∏–Ω–æ–≥–¥–∞ –ø–æ–ª–µ–∑–Ω–æ, –Ω–æ –Ω–µ —Å–µ–π—á–∞—Å.sil <[100]> –û—Ç–≤–µ—Ç—å –º–Ω–µ —á—ë—Ç–∫–æ.",
            "–ö–∞–∂–µ—Ç—Å—è, —Ç—ã –∑–Ω–∞–µ—à—å –º–Ω–æ–≥–æ –≤—Å–µ–≥–æ, –Ω–æ –∫–∞–∫-—Ç–æ –Ω–µ –æ—á–µ–Ω—å —Å–≤—è–∑–Ω–æ –≥–æ–≤–æ—Ä–∏—à—å. sil <[100]>–ü–æ–≤—Ç–æ—Ä—é —Ç–µ–±–µ –≤–æ–ø—Ä–æ—Å.",
            "–¢—ã +—è–≤–Ω–æ –∫–æ–º–ø–µ—Ç+–µ–Ω—Ç–µ–Ω –≤ —ç—Ç–æ–π –æ–±–ª–∞—Å—Ç–∏, –Ω–æ –º+–æ–∂–µ—Ç —Å—Ç–æ–∏—Ç –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥—É–º–∞—Ç—å, –ø—Ä–µ–∂–¥–µ —á–µ–º –≥–æ–≤–æ—Ä–∏—Ç—å. sil <[100]>–ò—Ç–∞–∫.",
            "–¢—ã —Ç–æ—á–Ω–æ –∑–Ω–∞–µ—à—å, –æ —á–µ–º –≥–æ–≤–æ—Ä–∏—à—å, –Ω–æ –∏–Ω–æ–≥–¥–∞ —Ç–≤–æ–∏ –º—ã—Å–ª–∏ —Ä–∞—Å—Å–µ–∏–≤–∞—é—Ç—Å—è. sil <[100]>–ü–æ–ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑."
        ]
        unrecognized_phrase = random.choice(unrecognized_phrases)
        response: dict = {
            'text': remove_tts_symbols(f'{unrecognized_phrase}\n\n‚ú®{question_body}\n{postsentence}:\n{variants}'),
            'tts': f'{hmmmsound}sil <[10]>{unrecognized_phrase}sil <[100]> {tts_prompt_sound(question_body)}sil <[50]> {postsentence}sil <[50]>{variants}',
            'buttons': generate_var_buttons(question_variants),
            'end_session': 'False'
        }

        session_state["unrecognized_attempt"] += 1

        analytics = {
            "events": [
                {
                    "name": "–û—Ç–≤–µ—Ç–∞ –Ω–µ—Ç –≤ –ø–µ—Ä–µ—á–Ω–µ",
                    "value": {
                        "–í–æ–ø—Ä–æ—Å": session_state['question_dict']['sentence'],
                        "–í–∞—Ä–∏–∞–Ω—Ç—ã": question_variants,
                        "–û—Ç–≤–µ—Ç": command
                    }
                },
            ]
        }

    else:
        workaround_phrases = [
            "–ò–Ω–æ–≥–¥–∞ —Å–ª–æ–∂–Ω–æ –≤—ã–≥–æ–≤–æ—Ä–∏—Ç—å —Ç–æ, —á—Ç–æ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ. –î–∞–≤–∞–π –ø—Ä–æ–ø—É—Å—Ç–∏–º –≤–æ–ø—Ä–æ—Å...",
            "–ò–Ω–æ–≥–¥–∞ —è —Å–ª—ã—à—É –ø–æ-–¥—Ä—É–≥–æ–º—É. –ü–æ—Ö–æ–∂–µ, —ç—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ –∏ —Å–µ–π—á–∞—Å. –ó–∞–±—É–¥–µ–º —ç—Ç–æ –∏ –ø–æ–π–¥—ë–º –¥–∞–ª—å—à–µ...",
            "–≠—Ç–æ —É–∂–µ —Å–ª–∏—à–∫–æ–º. –Ø –Ω–µ –º–æ–≥—É –ø–æ–Ω—è—Ç—å, –æ —á—ë–º —Ç—ã –≥–æ–≤–æ—Ä–∏—à—å. –ó–∞–¥–∞–º —Ç–µ–±–µ –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å...",
            "–Ø –±–µ–∑–Ω–∞–¥—ë–∂–Ω–æ —Ç–µ–±—è –Ω+–µ –ø–æ–Ω–∏–º–∞—é. –ú–æ–∂–µ—Ç, —É –Ω–∞—Å –ø–æ–ª—É—á–∏—Ç—Å—è —á—Ç–æ-–Ω–∏–±—É–¥—å —Å–æ —Å–ª–µ–¥—É—é—â–∏–º –≤–æ–ø—Ä–æ—Å–æ–º...",
            "–ú–æ—è —Ç–≤–æ—è –Ω+–µ –ø–æ–Ω–∏–º–∞—Ç—å. –¢–∞–∫–æ–µ –±—ã–≤–∞–µ—Ç –∏–Ω–æ–≥–¥–∞. –î–∞–≤–∞–π –ø—Ä–æ–ø—É—Å—Ç–∏–º –≤–æ–ø—Ä–æ—Å...",
            "–Ø —Å–Ω–æ–≤–∞ –Ω–µ —Ä–∞—Å—Å–ª—ã—à–∞–ª–∞, —Ö–æ—Ç—è —É—à–∏ —á–∏—â—É –∫–∞–∂–¥—ã–π –¥–µ–Ω—å. –Ø –ø—Ä–æ—â–∞—é —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å –∏ –∑–∞–¥–∞–º –¥—Ä—É–≥–æ–π..."
        ]
        workaround_phrase = random.choice(workaround_phrases)
        questionsound = random.choice(sounds["QUESTION"])
        # –ë–µ—Ä–µ–º –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –¥–ª—è —Å–µ—Å—Å–∏–∏ –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –∫ –Ω–µ–º—É
        question_dict = get_qa_session_sentence(session_id)
        attempt = 1
        # –ò–∑ –≤–æ–ø—Ä–æ—Å–∞-—Å–ª–æ–≤–∞—Ä—è –±–µ—Ä–µ–º —Å–∞–º –≤–æ–ø—Ä–æ—Å –¥–ª—è –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤ –æ—Ç–≤–µ—Ç
        question_body = question_dict["sentence"]
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–æ–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
        question_variants = question_dict["variants"][:3]
        variants = generate_var_string(question_variants)

        # –ü–æ–¥—Å—á—ë—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞ –∏ –µ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        score = 0
        cur_scores = update_scores(user_id, session_id, score)
        allscores = cur_scores["allscores"]
        sessionscore = cur_scores["sessionscore"]
        cur_rating = f'\n\nüèÖ–í–∞—à —Ä–µ–π—Ç–∏–Ω–≥:\n–û–±—â–∏–π: {allscores}\n–í —ç—Ç–æ–π –∏–≥—Ä–µ: {sessionscore}'

        response: dict = {
            'text': remove_tts_symbols(f'{workaround_phrase}\n\n‚ú®{question_body} \n{postsentence}:\n{variants}{cur_rating}'),
            'tts': f'{hmmmsound}sil <[10]>{workaround_phrase} sil <[110]>{questionsound}{tts_prompt_sound(question_body)} {postsentence}sil <[90]> {variants}',
            'buttons': generate_var_buttons(question_variants),
            'end_session': 'False'
        }

        session_state = {
            "question_dict": question_dict,
            "attempt": attempt
        }

        analytics = {
            "events": [
                {
                    "name": "–û—Ç–≤–µ—Ç–∞ –Ω–µ—Ç –≤ –ø–µ—Ä–µ—á–Ω–µ, –Ω–µ—Ç –ø–æ–ø—ã—Ç–æ–∫",
                    "value": {
                        "–í–æ–ø—Ä–æ—Å": session_state["question_dict"]["sentence"],
                        "–û—Ç–≤–µ—Ç": command
                    }
                },
                {
                    "name": "–ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å",
                    "value": {
                        "–í–æ–ø—Ä–æ—Å": remove_tts_symbols(question_body),
                    }
                }
            ]
        }

    return {
        "response": response,
        "analytics": analytics,
        "session_state": session_state
    }

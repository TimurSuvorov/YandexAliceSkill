import random


from mainapp.processing.db.extract_json import get_db_sentences
from mainapp.processing.handle_sessionfile import get_qa_session_sentence
from mainapp.processing.handlers.generate_question import tts_prompt_sound
from mainapp.processing.handlers.generate_variants_objects import generate_var_string, generate_var_buttons
from mainapp.processing.utils.custom_response import RapidJSONResponse


def exception_replies(event_dict: dict, error: Exception):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–π. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –∏–∑–≤–∏–Ω–µ–Ω–∏—è –∏ –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å.
    """
    session_id: str = event_dict['session']['session_id']

    # –ë–µ—Ä–µ–º –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –¥–ª—è —Å–µ—Å—Å–∏–∏
    question_dict: dict = get_qa_session_sentence(session_id)
    # –ò–∑ –≤–æ–ø—Ä–æ—Å–∞-—Å–ª–æ–≤–∞—Ä—è –±–µ—Ä–µ–º —Å–∞–º –≤–æ–ø—Ä–æ—Å –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
    question_body: str = question_dict["sentence"]
    question_variants: list = question_dict["variants"][:3]
    variants: str = generate_var_string(question_variants)
    # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ—Ö–≤–∞–ª—ã –∏ "–≤–∞—Ä–∏–∞–Ω—Ç–æ–≤"
    sentences: dict = get_db_sentences()
    postsentence: str = random.choice(sentences["POSTsentence"])

    exception_sentence: str = \
        random.choice(['–ò–∑–≤–∏–Ω–∏, —è –æ—Ç–≤–ª–µ–∫–ª–∞—Å—å –∏ –∑–∞–±—ã–ª–∞, —á—Ç–æ —Å–ø—Ä–∞—à–∏–≤–∞–ª–∞. –ó–∞–¥–∞–º —Ç–µ–±–µ –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å.',
                       '–ß—Ç–æ-—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å –∏ —è –∑–∞–±—ã–ª–∞, –ø—Ä–æ —á—Ç–æ –≥–æ–≤–æ—Ä–∏–ª–∞. –í–æ–æ–±—â–µ–º, –¥–∞–≤–∞–π –¥–∞–ª—å—à–µ.',
                       '–û–π. –ö–∞–∂–µ—Ç—Å—è —É –º–µ–Ω—è –ø—Ä–æ–≤–∞–ª –≤ –ø–∞–º—è—Ç–∏. –Ø –∑–∞–¥–∞–º —Ç–µ–±–µ –¥—Ä—É–≥–æ–π –≤–æ–ø—Ä–æ—Å.',
                       '–¢—ã —É–¥–∏–≤–∏—à—å—Å—è, –Ω–æ —è –∑–∞–±—ã–ª–∞ –æ—Ç–≤–µ—Ç. –ü—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–Ω—è—Ç—å –∏ –ø—Ä–æ—Å—Ç–∏—Ç—å. –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å.'
                       ])

    response: dict = {
            'text': f'üò≥{exception_sentence}\n ‚ú®{question_body} \n{postsentence}:\n{variants}'.replace(" - ", "").replace("+", ""),
            'tts': f'{exception_sentence}sil <[100]>{tts_prompt_sound(question_body)}sil <[50]>.{postsentence}:sil <[50]>{variants}',
            'buttons': generate_var_buttons(question_variants),
            'end_session': 'False'
    }

    analytics: dict = {
        "events": [
            {
                "name": "–û—à–∏–±–∫–∞ –≤ —Å–∏—Å—Ç–µ–º–µ",
                "value": {
                    "–û—Ç–≤–µ—Ç": str(error)
                }
            },
        ]
    }

    resp_data: dict = {
        'version': event_dict['version'],
        'session': event_dict['session'],
        'response': response,
        'analytics': analytics,
        'session_state': {
            "question_dict": question_dict,
            "attempt": 1
        }
    }
    return RapidJSONResponse(resp_data)

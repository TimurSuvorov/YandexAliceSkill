import random

from .proc_response_obj import generate_var_buttons, generate_var_string, tts_prompt_sound, remove_tts_symbols
from mainapp.processing.db.extract_json import get_db_sentences, get_db_sounds
from ..handle_sessionfile import get_qa_session_sentence
from ..handle_userprofile import update_scores, get_scores_rating


def dontknow(command, session_state, user_id, session_id):
    """
    –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É –Ω–µ –∑–Ω–∞–Ω–∏—è –∏–ª–∏ —Å–¥–∞—á–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç:
        - –≤–æ –≤—Ä–µ–º—è –∏–≥—Ä—ã (–≤–æ–ø—Ä–æ—Å —É–∂–µ –±—ã–ª –∑–∞–¥–∞–Ω —Ä–∞–Ω–µ–µ);
        - –≤ –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â—ë –Ω–µ —Å–ª—ã—à–∞–ª –≤–æ–ø—Ä–æ—Å–∞);
    –ï—Å–ª–∏ –±—ã–ª –≤–æ–ø—Ä–æ—Å –¥–æ —ç—Ç–æ–≥–æ, —Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ–∏–≥—Ä–∞–ª –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å.
    –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å–∞ –Ω–µ –±—ã–ª–æ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –ø–µ—Ä–µ–¥–∞–µ—Ç –µ–≥–æ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ.
    –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç —Ñ–ª–∞–≥–∞ AppMetrics: "–í–Ω–µ —Å—Ü–µ–Ω–∞—Ä–∏—è –±–µ–∑ –≤–æ–ø—Ä–æ—Å–∞", "–°–¥–∞–ª—Å—è" + "–ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å" –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.
    """
    # –ï—Å–ª–∏ "session_state" –ø—É—Å—Ç–æ–π –ø–æ –∫–∞–∫–∏–º-–ª–∏–±–æ –ø—Ä–∏—á–∏–Ω–∞–º, –ê–ª–∏—Å–∞ –ø—Ä–∏–∫–∏–Ω–∏—Ç—Å—è –≤–∞–ª–µ–Ω–∫–æ–º
    noquestionbefore = random.choice(
        ['–ê –≤–µ–¥—å –º—ã –¥–∞–∂–µ –µ—â—ë –Ω–µ –Ω–∞—á–∞–ª–∏, –∞ —Ç—ã —Ç–∞–∫–æ–µ –≥–æ–≤–æ—Ä–∏—à—å. –î–∞–≤–∞–π —è —É–∂–µ —Å–ø—Ä–æ—à—É —Ç–µ–±—è –æ —á—ë–º-–Ω–∏–±—É–¥—å?',
         '–ú—ã –ø–æ–∫–∞ –µ—â—ë –≤ –Ω–∞—á–∞–ª–µ –ø—É—Ç–∏. –î–∞–≤–∞–π —É–∂–µ —Å—Ç–∞—Ä—Ç—É–µ–º?'
         ]
    )
    if not session_state.get("question_dict"):
        response: dict = {
            'text': f'{noquestionbefore}',
            'tts': f'{noquestionbefore}',
            'buttons': [{'title': '–î–∞–≤–∞–π', 'hide': 'true'}],
            'end_session': 'False'
        }
        sessionstate = session_state

        analytics = {
            "events": [
                {
                    "name": "–í–Ω–µ —Å—Ü–µ–Ω–∞—Ä–∏—è –±–µ–∑ –≤–æ–ø—Ä–æ—Å–∞",
                    "value": {
                        "–û—Ç–≤–µ—Ç": command
                    }
                },
            ]
        }
    else:
        sounds = get_db_sounds()
        wrongsound = random.choice(sounds["WRONG"])
        sentences = get_db_sentences()
        postsentence = random.choice(sentences["POSTsentence"])
        noworrysentence = random.choice(sentences["NOWORRYsentence"])
        letnext = random.choice(sentences["LETSNEXTsentence"])
        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π –∏–∑ —Å–ø–∏—Å–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –∏ –µ–≥–æ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ
        answer = session_state["question_dict"]["answers"][0]
        question_explanation = session_state["question_dict"]["explanation"]
        # –ë–µ—Ä–µ–º –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –¥–ª—è —Å–µ—Å—Å–∏–∏
        question_dict = get_qa_session_sentence(session_id)
        # –ò–∑ –≤–æ–ø—Ä–æ—Å–∞-—Å–ª–æ–≤–∞—Ä—è –±–µ—Ä–µ–º —Å–∞–º –≤–æ–ø—Ä–æ—Å –¥–ª—è –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤ –æ—Ç–≤–µ—Ç
        question_body = question_dict["sentence"]
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–æ–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
        question_variants = question_dict["variants"][:3]
        variants = generate_var_string(question_variants)

        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞ –∏ –µ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        cur_scores = get_scores_rating(user_id, session_id)
        allscores = cur_scores["allscores"]
        sessionscore = cur_scores["sessionscore"]
        cur_rating = f'\n\nüèÖ–í–∞—à —Ä–µ–π—Ç–∏–Ω–≥:\n–û–±—â–∏–π: {allscores}\n–í —ç—Ç–æ–π –∏–≥—Ä–µ: {sessionscore}'

        response: dict = {
            'text': remove_tts_symbols(f'{noworrysentence}\n–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {answer}.\n{question_explanation} \n{letnext}.\n‚ú®{question_body}\n{postsentence}:\n{variants}{cur_rating}'),
            'tts': f'{wrongsound}sil <[5]>{noworrysentence}sil <[70]> –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: sil <[70]> {answer}.sil <[70]> {question_explanation} sil <[100]> {letnext}. sil <[100]> {tts_prompt_sound(question_body)}.sil <[50]> {postsentence}:sil <[50]> {variants}',
            'buttons': generate_var_buttons(question_variants),
            'end_session': 'False'
        }

        sessionstate = {
            "question_dict": question_dict,
            "attempt": 1,
        }
        analytics = {
            "events": [
                {
                    "name": "–°–¥–∞–ª—Å—è",
                    "value": {
                        "–í–æ–ø—Ä–æ—Å": session_state["question_dict"]["sentence"],
                    }
                },
                {
                    "name": "–ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å",
                    "value": {
                        "–í–æ–ø—Ä–æ—Å": remove_tts_symbols(question_dict["sentence"]),
                    }
                }
            ]
        }

    return {
        "response": response,
        "analytics": analytics,
        "session_state": sessionstate
    }

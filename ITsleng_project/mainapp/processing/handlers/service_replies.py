import random

from mainapp.processing.declension_numbers import decl_scores, decl_places
from mainapp.processing.db.extract_json import get_db_sentences, get_db_sounds
from mainapp.processing.handle_common_rating import get_user_common_rating_info
from mainapp.processing.handle_sessionfile import create_session_file
from mainapp.processing.handle_userprofile import check_old_user
from mainapp.processing.handlers.proc_response_obj import remove_tts_symbols, tts_prompt_sound


def hi_replies(user_id: str, session_id: str) -> dict:
    """–§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.

     –£—Å–ª–æ–≤–∏—è:
        - –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å;
        - —Å—Ç–∞—Ä—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:
            -- –Ω—É–ª–µ–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥;
            -- –Ω–µ–Ω—É–ª–µ–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥ –∏ –º–µ—Å—Ç–æ;
    –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç —Ñ–ª–∞–≥–∞ AppMetrics: "–ó–∞–ø—É—Å–∫ –Ω–∞–≤—ã–∫–∞"

    """
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –¥–ª—è —Å–µ—Å—Å–∏–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ db_sentences.json
    sentences = create_session_file(session_id)

    # –í—ã–±–∏—Ä–∞–µ–º –∑–≤—É–∫–∏
    sounds = get_db_sounds()
    startsound = random.choice(sounds["START"])

    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—Ä–∞–∑—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –¥–ª—è –Ω–æ–≤–æ–≥–æ/—Å—Ç–∞—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    rating_text = ''
    rating_tts = ''

    if check_old_user(user_id):
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞ –∏ –º–µ—Å—Ç–∞
        user_place_score = get_user_common_rating_info(user_id)[0]
        user_place = user_place_score[0]
        user_scores = user_place_score[1]

        hi_text = random.choice(sentences["HIsentence_olduser"])

        rating_phr1_text_tts = random.choice(
            [
                '\n\nüèÖ –ü–æ—Å–º+–æ—Ç—Ä–∏–º, —Å–∫–æ–ª—å–∫–æ –≤ —Ç–≤–æ–µ–π –∫–æ–ø–∏–ª–∫–µ üèÖ \n',
                '\n\nüèÖ –ü–æ—Å–º+–æ—Ç—Ä–∏–º –Ω–∞ —Ç–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥ üèÖ \n',
                '\n\nüèÖ –ü–∞—Ä—É —Å–ª–æ–≤ –ø—Ä–æ —Ç–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥ üèÖ \n',
                '\n\nüèÖ –ò–Ω—Ç–µ—Ä+–µ—Å–Ω–æ –≤–∑–≥–ª—è–Ω—É—Ç—å –Ω–∞ —Ç–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥ üèÖ \n',
            ]
        )

        # –ï—Å–ª–∏ —Ä–µ–π—Ç–∏–Ω–≥ –Ω–µ–Ω—É–ª–µ–≤–æ–π, —Ç–æ –∑–Ω–∞—á–∏—Ç —Å–æ–æ–±—â–∞–µ–º –µ–º—É –æ —Ç–µ–∫—É—â–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏.
        if int(user_scores) != 0:
            rating_phr2_text = random.choice(
                [
                    f'–¢—ã –Ω–∞–±—Ä–∞–ª {decl_scores(user_scores)} –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è –∏ –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –Ω–∞ {user_place} –º–µ—Å—Ç–µ.\n',
                    f'–°–µ–π—á–∞—Å —É —Ç–µ–±—è {decl_scores(user_scores)}. –í –æ–±—â–µ–º –∑–∞—á—ë—Ç–µ —Ç—ã –Ω–∞ {user_place} –º–µ—Å—Ç–µ.\n',
                    f'–£ —Ç–µ–±—è –≤—Å–µ–≥–æ {decl_scores(user_scores)} –∏ —Ç—ã –Ω–∞ {user_place} –º–µ—Å—Ç–µ.\n',
                    f'–¢—ã –Ω–∞–±—Ä–∞–ª –≤—Å–µ–≥–æ {decl_scores(user_scores)} –∏ –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –Ω–∞ {user_place} –º–µ—Å—Ç–µ.\n',
                    f'–í —Ç–≤–æ–µ–π –∫–æ–ø+–∏–ª–∫–µ {decl_scores(user_scores)}, —Ç—ã –Ω–∞ {user_place} –º–µ—Å—Ç–µ –≤ –æ–±—â–µ–º –∑–∞—á—ë—Ç–µ.\n',
                ]
            )

            rating_phr2_tts = random.choice(
                [
                    f'–¢—ã –Ω–∞–±—Ä–∞–ª {decl_scores(user_scores)} –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è –∏ –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –Ω–∞ {decl_places(user_place)} –º–µ—Å—Ç–µ.\n',
                    f'–°–µ–π—á–∞—Å —É —Ç–µ–±—è {decl_scores(user_scores)}. –í –æ–±—â–µ–º –∑–∞—á—ë—Ç–µ —Ç—ã –Ω–∞ {decl_places(user_place)} –º–µ—Å—Ç–µ.\n',
                    f'–£ —Ç–µ–±—è –≤—Å–µ–≥–æ {decl_scores(user_scores)} –∏ —Ç—ã –Ω–∞ {decl_places(user_place)} –º–µ—Å—Ç–µ.\n',
                    f'–¢—ã –Ω–∞–±—Ä–∞–ª –≤—Å–µ–≥–æ {decl_scores(user_scores)} –∏ –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –Ω–∞ {decl_places(user_place)} –º–µ—Å—Ç–µ.\n',
                    f'–í —Ç–≤–æ–µ–π –∫–æ–ø+–∏–ª–∫–µ {decl_scores(user_scores)}, —Ç—ã –Ω–∞ {decl_places(user_place)} –º–µ—Å—Ç–µ –≤ –æ–±—â–µ–º –∑–∞—á—ë—Ç–µ.\n',
                ]
            )

            rating_phr3_text_tts = random.choice(
                [
                    '–≠—Ç–æ –≤–µ—Å—å–º–∞ —Ö–æ—Ä–æ—à–æ.sil <[100]> \n',
                    '–û—á–µ–Ω—å –Ω–µ–ø–ª–æ—Ö–æ! –ü—Ä–µ–¥–ª–∞–≥–∞—é –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å—Å—è –Ω–∞ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–æ–º.sil <[100]> \n',
                    '–£–≤–µ—Ä–µ–Ω–∞, —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å –±–æ–ª—å—à–µ.sil <[100]> \n',
                    '–í–µ—Å—å–º–∞ –Ω–µ–¥—É—Ä–Ω–æ!sil <[100]> \n',
                    '–ù–µ–ø–ª–æ—Ö–æ–π —Ç–µ–º–ø, –Ω–æ –≤—Å—ë –µ—â—ë –≤–ø–µ—Ä–µ–¥–∏.sil <[100]> \n',
                    '–ù–æ —Ç—ã –Ω+–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Å—è.sil <[100]> \n',
                    '–£–≤–µ—Ä–µ–Ω–∞, —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å –Ω–∞ –±+–æ–ª—å—à–µ–µ.sil <[100]> \n',
                 ]
            )

            rating_phr4_text_tts = random.choice(
                [
                    "–ù–∞—á–∏–Ω–∞–µ–º?",
                    "–ü—Ä–æ–¥+–æ–ª–∂–∏–º –∏–≥—Ä—É?",
                    "–ü–æ–µ—Ö–∞–ª–∏?",
                    "–ü—Ä–æ–¥–æ–ª–∂–∏–º –ø–æ–∫–æ—Ä—è—Ç—å –≤–µ—Ä—à–∏–Ω—ã?",
                    "–ü—Ä–æ–¥–æ–ª–∂–∏–º?",
                ]
            )

            rating_text = rating_phr1_text_tts + rating_phr2_text + rating_phr3_text_tts + rating_phr4_text_tts
            rating_tts = rating_phr1_text_tts + rating_phr2_tts + rating_phr3_text_tts + rating_phr4_text_tts

        # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–ª—å –±–∞–ª–ª–æ–≤
        else:
            rating_phr1_text_tts = random.choice(
                [
                    '–£ —Ç–µ–±—è –ø–æ –Ω—É–ª—è–º. ',
                    '–£ —Ç–µ–±—è –Ω–æ–ª—å –±–∞–ª–ª–æ–≤. ',
                    '–ù–µ –º–æ–≥—É –ø–æ–Ω—è—Ç—å –ø–æ—á–µ–º—É, –Ω–æ —É —Ç–µ–±—è –Ω–æ–ª—å –±–∞–ª–ª–æ–≤. '
                ]
            )
            rating_phr2_text_tts = random.choice(
                [
                    '–ù–µ –≥—É—Å—Ç–æ. \n',
                    '–ú–∞–ª–æ–≤–∞—Ç–æ –±—É–¥–µ—Ç. \n',
                    '–£–≤–µ—Ä–µ–Ω–∞, —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å –Ω–∞ –±+–æ–ª—å—à–µ–µ. \n',
                ]
            )

            rating_phr3_text_tts = random.choice(
                [
                    "–ù–∞—á–Ω—ë–º –ø–æ–∫–æ—Ä—è—Ç—å –≤–µ—Ä—à–∏–Ω—ã?",
                    "–ü—Ä–æ–¥+–æ–ª–∂–∏–º –∏–≥—Ä—É, —á—Ç–æ–± —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å?",
                    "–ü—Ä–æ–¥+–æ–ª–∂–∏–º –∏–≥—Ä—É, —á—Ç–æ–± —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å?",
                ]
            )

            rating_text = rating_phr1_text_tts + rating_phr2_text_tts + rating_phr3_text_tts
            rating_tts = rating_phr1_text_tts + rating_phr2_text_tts + rating_phr3_text_tts

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—à—ë–ª –≤ –ø–µ—Ä–≤—ã–π —Ä–∞–∑
    else:
        hi_text = sentences["HIsentence_newuser"]

    response: dict = {
            'text': remove_tts_symbols(f'{hi_text}{rating_text}'),
            'buttons': [
                {'title': '–ü—Ä–∞–≤–∏–ª–∞', 'hide': 'true'},
                {'title': '–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?', 'hide': 'true'},
                {'title': '–ò–≥—Ä–∞—Ç—å!', 'hide': 'true'},
                {'title': '–í—ã–π—Ç–∏', 'hide': 'true'}
            ],
            'tts': f'{startsound}{hi_text}{rating_tts}',
            "card": {
                "type": "BigImage",
                "image_id": "997614/c45c09816466152b9aca",
                "title": "  ¬´IT—à–Ω–∏–∫ –≤ –æ—Ñ–∏—Å–µ¬ª",
                "description": remove_tts_symbols(f'{hi_text}{rating_text}'),
                "button": {
                    "text": "–ò–≥—Ä–∞—Ç—å"
                }
            },
            'end_session': 'false'
    }
    sessionstate = {'service': 11, 'yesno_type': 10}  # —Ñ–ª–∞–≥–∏ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –∏ –∑–∞–∫—Ä—ã—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
    analytics = {
            "events": [
                {
                    "name": "–ó–∞–ø—É—Å–∫ –Ω–∞–≤—ã–∫–∞",
                },
            ]
        }

    return {
        "response": response,
        "analytics": analytics,
        "session_state": sessionstate,
    }


def bye_replies(session_state: dict, session_id: str):
    """–§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –ø—Ä–æ—â–∞–Ω–∏—è –ø—Ä–∏ —è–≤–Ω–æ–º –≤—ã—Ö–æ–¥–µ –∏–∑ –Ω–∞–≤—ã–∫–∞.

    –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç —Ñ–ª–∞–≥–∞ AppMetrics: "–í—ã—Ö–æ–¥ –∏–∑ –Ω–∞–≤—ã–∫–∞"
    """
    sentences = get_db_sentences()
    bye_text = random.choice(sentences["BYEsentence"])

    # –í—ã–±–∏—Ä–∞–µ–º –∑–≤—É–∫–∏
    sounds = get_db_sounds()
    byesound = random.choice(sounds["BYE"])

    response: dict = {
            'text': remove_tts_symbols(bye_text),
            'tts': f'{bye_text} {byesound}',
            'end_session': 'True'
    }

    return {
        "response": response,
        "analytics": {
            "events": [
                {
                    "name": "–í—ã—Ö–æ–¥ –∏–∑ –Ω–∞–≤—ã–∫–∞",
                },
            ]
        },
        "session_state": session_state
    }


def rules_replies(session_state: dict) -> dict:
    """–§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ö.

    –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç:
        - –∑–∞–ø—Ä–æ—Å –≤ –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã;
        - –∑–∞–ø—Ä–æ—Å –≤–æ –≤—Ä–µ–º—è –∏–≥—Ä—ã;

    –í –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –æ—Ç–¥–∞–µ—Ç –µ–≥–æ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ –≤ –æ—Ç–≤–µ—Ç (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Å –º–µ—Å—Ç–∞ –≤–æ –≤—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–∞–≤–∏–ª), –Ω–æ —É–∂–µ —Å —Ñ–ª–∞–≥–∞–º–∏
    —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –∏ –∑–∞–∫—Ä—ã—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞.
    –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç —Ñ–ª–∞–≥–∞ AppMetrics: "–ó–∞–ø—Ä–æ—Å '–ü—Ä–∞–≤–∏–ª–∞'."

    """
    sentences: dict = get_db_sentences()
    rules_text = sentences["RULES"]
    # –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑–≤–∞–Ω–∞ –≤–æ –≤—Ä–µ–º—è –≤–æ–ø—Ä–æ—Å–∞, –∫–æ–≥–¥–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç session_state["question_dict"]["answers"]
    if session_state.get('question_dict', {}).get('answers'):
        rules_text += '–ü—Ä–æ–¥+–æ–ª–∂–∏–º?'
    else:
        rules_text += '–ù—É —á—Ç+–æ, –Ω–∞—á–∏–Ω+–∞–µ–º?'

    response: dict = {
            'text': remove_tts_symbols(rules_text).replace("<...>", 'üé∂'),
            'buttons': [
                {'title': '–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?', 'hide': 'true'},
                {'title': '–ò–≥—Ä–∞—Ç—å!', 'hide': 'true'},
                {'title': '–í—ã–π—Ç–∏', 'hide': 'true'}
            ],
            'tts': tts_prompt_sound(rules_text),
            'end_session': 'false'
    }

    # –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–º –æ—Ç–≤–µ—Ç–æ–º –ø–µ—Ä–µ–¥–∞–µ–º –ø—Ä–æ–∑—Ä–∞—á–Ω–æ, –Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º —Å–µ—Ä–≤–∏—Å–Ω—ã–π —Ñ–ª–∞–≥
    sessionstate = session_state
    sessionstate["yesno_type"] = 10
    sessionstate["service"] = 11

    analytics = {
            "events": [
                {
                    "name": "–ó–∞–ø—Ä–æ—Å '–ü—Ä–∞–≤–∏–ª–∞'",
                },
            ]
        }

    return {
        "response": response,
        "analytics": analytics,
        "session_state": sessionstate
    }


def about_replies(session_state: dict) -> dict:
    """–§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç —Å —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º, —á—Ç–æ —É–º–µ–µ—Ç –Ω–∞–≤—ã–∫, –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ö –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç –æ—Ç:
        - –∑–∞–ø—Ä–æ—Å –≤ –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã;
        - –∑–∞–ø—Ä–æ—Å –≤–æ –≤—Ä–µ–º—è –∏–≥—Ä—ã;

    –í –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –æ—Ç–¥–∞–µ—Ç –µ–≥–æ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ –≤ –æ—Ç–≤–µ—Ç (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Å –º–µ—Å—Ç–∞ –≤–æ –≤—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞), –Ω–æ —É–∂–µ —Å —Ñ–ª–∞–≥–∞–º–∏
    —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –∏ –∑–∞–∫—Ä—ã—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞.
    –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç —Ñ–ª–∞–≥–∞ AppMetrics: "–ó–∞–ø—Ä–æ—Å '–ß—Ç–æ —É–º–µ–µ—à—å?'."

    """
    sentences = get_db_sentences()
    about_text = sentences["ABOUT"]

    # –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑–≤–∞–Ω–∞ –≤–æ –≤—Ä–µ–º—è –≤–æ–ø—Ä–æ—Å–∞, –∫–æ–≥–¥–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç session_state["question_dict"]["answers"]
    if session_state.get('question_dict', {}).get('answers'):
        about_text += '–ü—Ä–æ–¥+–æ–ª–∂–∏–º?'
    else:
        about_text += '–ù–∞—á–∏–Ω+–∞–µ–º?'

    response: dict = {
            'text': remove_tts_symbols(about_text),
            'buttons': [
                {'title': '–ü—Ä–∞–≤–∏–ª–∞', 'hide': 'true'},
                {'title': '–ò–≥—Ä–∞—Ç—å!', 'hide': 'true'},
                {'title': '–í—ã–π—Ç–∏', 'hide': 'true'}
            ],
            'tts': about_text,
            'end_session': 'false'
    }

    # –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–º –æ—Ç–≤–µ—Ç–æ–º –ø–µ—Ä–µ–¥–∞–µ–º –ø—Ä–æ–∑—Ä–∞—á–Ω–æ, –Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º —Å–µ—Ä–≤–∏—Å–Ω—ã–π —Ñ–ª–∞–≥
    sessionstate = session_state
    sessionstate["yesno_type"] = 10
    sessionstate["service"] = 11

    analytics = {
            "events": [
                {
                    "name": "–ó–∞–ø—Ä–æ—Å '–ß—Ç–æ —É–º–µ–µ—à—å?'",
                },
            ]
        }

    return {
        "response": response,
        "analytics": analytics,
        "session_state": sessionstate
    }

import random

from mainapp.processing.declension_numbers import decl_scores
from mainapp.processing.db.extract_json import get_db_sentences, get_db_sounds
from mainapp.processing.handle_sessionfile import create_session_file
from mainapp.processing.handle_userprofile import check_old_user, get_scores_rating


def hi_replies(user_id: str, session_id: str) -> dict:
    """
    –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç:
        - –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å;
        - —Å—Ç–∞—Ä—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:
            -- –Ω—É–ª–µ–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥;
            -- –Ω–µ–Ω—É–ª–µ–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥;
    –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç —Ñ–ª–∞–≥–∞ AppMetrics: "–ó–∞–ø—É—Å–∫ –Ω–∞–≤—ã–∫–∞"
    """
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –¥–ª—è —Å–µ—Å—Å–∏–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ db_sentences.json
    sentences = create_session_file(session_id)
    rating_message = ''
    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—Ä–∞–∑—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –¥–ª—è –Ω–æ–≤–æ–≥–æ/—Å—Ç–∞—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if check_old_user(user_id):
        hi_text = sentences["HIsentence_olduser"]["text"]
        hi_tts = sentences["HIsentence_olduser"]["tts"]
        rating_message += random.choice(['üèÖ –ü–∞—Ä—É —Å–ª–æ–≤ –ø—Ä–æ —Ç–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥ üèÖ\n',
                                         'üèÖ –ü–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞ —Ç–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥ üèÖ\n',
                                         'üèÖ –ü–∞—Ä—É —Å–ª–æ–≤ –ø—Ä–æ —Ç–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥ üèÖ\n'])
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞ –∏–∑ –ø—Ä–æ—Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±—â–∏–π –∏ –∑–∞ —Å–µ—Å—Å–∏—é
        cur_scores = get_scores_rating(user_id, session_id)
        allscores = cur_scores["allscores"]

        # –ï—Å–ª–∏ —Ä–µ–π—Ç–∏–Ω–≥ –Ω–µ–Ω—É–ª–µ–≤–æ–π, —Ç–æ –∑–Ω–∞—á–∏—Ç —Å–æ–æ–±—â–∞–µ–º –µ–º—É –æ —Ç–µ–∫—É—â–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏.
        # –§—É–Ω–∫—Ü–∏—è decl_scores() –∏–∑–º–µ–Ω—è–µ—Ç —Å–∫–ª–æ–Ω–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —á–∏—Å–ª–∞.
        if int(allscores) != 0:
            rating_message += random.choice(
                [f'–¢—ã –Ω–∞–±—Ä–∞–ª {decl_scores(allscores)} –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è.\n',
                 f'–°–µ–π—á–∞—Å —É —Ç–µ–±—è {decl_scores(allscores)}.\n',
                 f'–£ —Ç–µ–±—è –≤—Å–µ–≥–æ {decl_scores(allscores)}.\n',
                 f'–¢—ã –Ω–∞–±—Ä–∞–ª –≤—Å–µ–≥–æ {decl_scores(allscores)}.\n'
                 ]
            )

            rating_message += random.choice(
                ['–≠—Ç–æ –≤–µ—Å—å–º–∞ —Ö–æ—Ä–æ—à–æ. –ù–∞—á–∏–Ω–∞–µ–º?',
                 '–û—á–µ–Ω—å –Ω–µ–ø–ª–æ—Ö–æ! –ü—Ä–µ–¥–ª–∞–≥–∞—é –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å—Å—è –Ω–∞ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–æ–º. –ü—Ä–æ–¥–æ–ª–∂–∏–º –∏–≥—Ä—É? ',
                 '–£–≤–µ—Ä–µ–Ω–∞, —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å –±–æ–ª—å—à–µ. –ü–æ–µ—Ö–∞–ª–∏?',
                 '–í–µ—Å—å–º–∞ –Ω–µ–¥—É—Ä–Ω–æ! -  –ü—Ä–æ–¥–æ–ª–∂–∏–º –ø–æ–∫–æ—Ä—è—Ç—å –≤–µ—Ä—à–∏–Ω—ã? ',
                 '–ù–µ–ø–ª–æ—Ö–æ–π —Ç–µ–º–ø, –Ω–æ –≤—Å—ë –µ—â—ë –≤–ø–µ—Ä–µ–¥–∏. –ü—Ä–æ–¥–æ–ª–∂–∏–º? ',
                 '–ù–æ —Ç—ã –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Å—è. –ü—Ä–æ–¥–æ–ª–∂–∏–º? '
                 ]
                                            )
        # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–æ–ª—å –±–∞–ª–ª–æ–≤
        else:
            rating_message += random.choice(
                ['–£ —Ç–µ–±—è –ø–æ –Ω—É–ª—è–º. ',
                 '–£ —Ç–µ–±—è –Ω–æ–ª—å –±–∞–ª–ª–æ–≤. ',
                 '–ù–µ –º–æ–≥—É –ø–æ–Ω—è—Ç—å –ø–æ—á–µ–º—É, –Ω–æ —É —Ç–µ–±—è –Ω–æ–ª—å –±–∞–ª–ª–æ–≤. '
                 ]
            )
            rating_message += random.choice(
                ['–ù–µ –≥—É—Å—Ç–æ. –ù–∞—á–Ω—ë–º –ø–æ–∫–æ—Ä—è—Ç—å –≤–µ—Ä—à–∏–Ω—ã? ',
                 '–ú–∞–ª–æ–≤–∞—Ç–æ –±—É–¥–µ—Ç. –ü—Ä–æ–¥–æ–ª–∂–∏–º –∏–≥—Ä—É, —á—Ç–æ–± —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å? ',
                 '–£–≤–µ—Ä–µ–Ω–∞, —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å –Ω–∞ –±+–æ–ª—å—à–µ–µ. –ü—Ä–æ–¥–æ–ª–∂–∏–º –∏–≥—Ä—É, —á—Ç–æ–± —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å? ',
                ]
            )
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—à—ë–ª –≤ –ø–µ—Ä–≤—ã–π —Ä–∞–∑
    else:
        hi_text = sentences["HIsentence_newuser"]["text"]
        hi_tts = sentences["HIsentence_newuser"]["tts"]

    # –í—ã–±–∏—Ä–∞–µ–º –∑–≤—É–∫–∏
    sounds = get_db_sounds()
    startsound = random.choice(sounds["START"])

    response: dict = {
            'text': f'{hi_text} {rating_message}'.replace(" - ", "").replace("+", ""),
            'buttons': [
                {'title': '–ü—Ä–∞–≤–∏–ª–∞', 'hide': 'true'},
                {'title': '–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?', 'hide': 'true'}
            ],
            'tts': f'{startsound}{hi_tts} {rating_message}',
            'end_session': 'false'
    }
    sessionstate = {'service': 11, 'yesno_type': 10}  # —Ñ–ª–∞–≥–∏ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –∏ –∑–∞–∫—Ä—ã—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
    analytics = {
            "events": [
                {
                    "name": "–ó–∞–ø—É—Å–∫ –Ω–∞–≤—ã–∫–∞",
                },
            ]
        }

    return {
        "response": response,
        "analytics": analytics,
        "session_state": sessionstate,
    }


def bye_replies(session_state: dict, session_id: str):
    """
    –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –ø—Ä–æ—â–∞–Ω–∏—è –ø—Ä–∏ —è–≤–Ω–æ–º –≤—ã—Ö–æ–¥–µ –∏–∑ –Ω–∞–≤—ã–∫–∞.
    –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç —Ñ–ª–∞–≥–∞ AppMetrics: "–í—ã—Ö–æ–¥ –∏–∑ –Ω–∞–≤—ã–∫–∞"
    """
    sentences = get_db_sentences()
    bye_text = random.choice(sentences["BYEsentence"])

    # –í—ã–±–∏—Ä–∞–µ–º –∑–≤—É–∫–∏
    sounds = get_db_sounds()
    byesound = random.choice(sounds["BYE"])

    response: dict = {
            'text': bye_text,
            'tts': f'{bye_text} {byesound}',
            'end_session': 'True'
    }

    return {
        "response": response,
        "analytics": {
            "events": [
                {
                    "name": "–í—ã—Ö–æ–¥ –∏–∑ –Ω–∞–≤—ã–∫–∞",
                },
            ]
        },
        "session_state": session_state
    }


def rules_replies(session_state: dict) -> dict:
    """
    –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ö –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç –æ—Ç:
        - –∑–∞–ø—Ä–æ—Å –≤ –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã;
        - –∑–∞–ø—Ä–æ—Å –≤–æ –≤—Ä–µ–º—è –∏–≥—Ä—ã;
    –í –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –æ—Ç–¥–∞–µ—Ç –µ–≥–æ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ –≤ –æ—Ç–≤–µ—Ç (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Å –º–µ—Å—Ç–∞ –≤–æ –≤—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–∞–≤–∏–ª), –Ω–æ —É–∂–µ —Å —Ñ–ª–∞–≥–∞–º–∏
    —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –∏ –∑–∞–∫—Ä—ã—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞.
    –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç —Ñ–ª–∞–≥–∞ AppMetrics: "–ó–∞–ø—Ä–æ—Å '–ü—Ä–∞–≤–∏–ª–∞'"
    """
    sentences = get_db_sentences()
    rules_text = sentences["RULES"]["text"]
    rules_tts = sentences["RULES"]["tts"]
    # –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑–≤–∞–Ω–∞ –≤–æ –≤—Ä–µ–º—è –≤–æ–ø—Ä–æ—Å–∞, –∫–æ–≥–¥–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç session_state["question_dict"]["answers"]
    if session_state.get('question_dict', {}).get('answers'):
        rules_text += '–ü—Ä–æ–¥–æ–ª–∂–∏–º?'
        rules_tts += '–ü—Ä–æ–¥+–æ–ª–∂–∏–º?'
    else:
        rules_text += '–ù—É —á—Ç–æ, –Ω–∞—á–∏–Ω–∞–µ–º?'
        rules_tts += '–ù—É —á—Ç+–æ, –Ω–∞—á–∏–Ω+–∞–µ–º?'

    response: dict = {
            'text': rules_text,
            'buttons': [
                {'title': '–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?', 'hide': 'true'}
            ],
            'tts': rules_tts,
            'end_session': 'false'
    }

    # –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–º –æ—Ç–≤–µ—Ç–æ–º –ø–µ—Ä–µ–¥–∞–µ–º –ø—Ä–æ–∑—Ä–∞—á–Ω–æ, –Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º —Å–µ—Ä–≤–∏—Å–Ω—ã–π —Ñ–ª–∞–≥
    sessionstate = session_state
    sessionstate["yesno_type"] = 10
    sessionstate["service"] = 11

    analytics = {
            "events": [
                {
                    "name": "–ó–∞–ø—Ä–æ—Å '–ü—Ä–∞–≤–∏–ª–∞'",
                },
            ]
        }

    return {
        "response": response,
        "analytics": analytics,
        "session_state": sessionstate
    }


def about_replies(session_state: dict) -> dict:
    """
    –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç —Å —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º, —á—Ç–æ —É–º–µ–µ—Ç –Ω–∞–≤—ã–∫, –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ö –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç –æ—Ç:
        - –∑–∞–ø—Ä–æ—Å –≤ –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã;
        - –∑–∞–ø—Ä–æ—Å –≤–æ –≤—Ä–µ–º—è –∏–≥—Ä—ã;
    –í –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –æ—Ç–¥–∞–µ—Ç –µ–≥–æ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ –≤ –æ—Ç–≤–µ—Ç (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Å –º–µ—Å—Ç–∞ –≤–æ –≤—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞), –Ω–æ —É–∂–µ —Å —Ñ–ª–∞–≥–∞–º–∏
    —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –∏ –∑–∞–∫—Ä—ã—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞.
    –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç —Ñ–ª–∞–≥–∞ AppMetrics: "–ó–∞–ø—Ä–æ—Å '–ß—Ç–æ —É–º–µ–µ—à—å?'"
    """
    sentences = get_db_sentences()
    about_text = sentences["ABOUT"]

    # –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑–≤–∞–Ω–∞ –≤–æ –≤—Ä–µ–º—è –≤–æ–ø—Ä–æ—Å–∞, –∫–æ–≥–¥–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç session_state["question_dict"]["answers"]
    if session_state.get('question_dict', {}).get('answers'):
        about_text += '–ü—Ä–æ–¥+–æ–ª–∂–∏–º?'
    else:
        about_text += '–ù–∞—á–∏–Ω+–∞–µ–º?'

    response: dict = {
            'text': about_text.replace(" - ", "").replace("+", ""),
            'buttons': [
                {'title': '–ü—Ä–∞–≤–∏–ª–∞', 'hide': 'true'}
            ],
            'tts': about_text,
            'end_session': 'false'
    }

    # –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–º –æ—Ç–≤–µ—Ç–æ–º –ø–µ—Ä–µ–¥–∞–µ–º –ø—Ä–æ–∑—Ä–∞—á–Ω–æ, –Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º —Å–µ—Ä–≤–∏—Å–Ω—ã–π —Ñ–ª–∞–≥
    sessionstate = session_state
    sessionstate["yesno_type"] = 10
    sessionstate["service"] = 11

    analytics = {
            "events": [
                {
                    "name": "–ó–∞–ø—Ä–æ—Å '–ß—Ç–æ —É–º–µ–µ—à—å?'",
                },
            ]
        }

    return {
        "response": response,
        "analytics": analytics,
        "session_state": sessionstate
    }
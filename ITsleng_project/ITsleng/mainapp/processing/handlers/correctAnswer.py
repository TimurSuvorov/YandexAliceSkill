import random

from .generate_question import tts_prompt_sound
from ..declension_scores import decl_scores
from ..extract_json import get_db_sentences, get_db_sounds
from .generate_variants_objects import generate_var_buttons, generate_var_string
from ..handle_sessionfile import get_qa_session_sentence
from ..handle_userprofile import update_scores, get_scores_rating


def correctanswer(command, session_state, user_id, session_id, message_id):
    # –ë–µ—Ä–µ–º –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –¥–ª—è —Å–µ—Å—Å–∏–∏
    question_dict = get_qa_session_sentence(session_id)
    # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ—Ö–≤–∞–ª—ã –∏ "–≤–∞—Ä–∏–∞–Ω—Ç–æ–≤"
    sentences = get_db_sentences()
    nicesentence = random.choice(sentences["NICEsentence"])
    postsentence = random.choice(sentences["POSTsentence"])
    sayrating = ''
    letsnext = random.choice(sentences["LETSNEXTsentence"])

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Å—Ö–æ–∂–µ—Å—Ç—å —Å–ª–æ–≤–∞
    rightanswer = session_state["question_dict"]["answers"][0].replace("+", "")
    if rightanswer != command:  # FIXIT check by regex
        nicesentence = random.choice(["–ü–∏—à–µ—Ç—Å—è –ø–æ-–¥—Ä—É–≥–æ–º—É, –Ω–æ —è –ø–æ–Ω—è–ª–∞. –í–µ—Ä–Ω–æ!",
                                      "–ù–µ—á–µ—Ç–∫–æ –≥–æ–≤–æ—Ä–∏—à—å, –Ω–æ, –ø–æ—Ö–æ–∂–µ, —Ç—ã –ø—Ä–∞–≤!",
                                      "–ë—ã–ª–æ –Ω–µ–ø—Ä–æ—Å—Ç–æ –ø–æ–Ω—è—Ç—å —Ç–≤–æ–∏ —Å–ª–æ–≤–∞, –Ω–æ —Ç—ã –ø—Ä–∞–≤!",
                                      "–Ø —Ç–µ–±—è –ø–æ–Ω—è–ª–∞! –í–µ—Ä–Ω–æ!"
                                      ]
                                     )

    # –í—ã–±–∏—Ä–∞–µ–º –∑–≤—É–∫–∏
    sounds = get_db_sounds()
    correctsound = random.choice(sounds["CORRECT"])

    # –ò–∑ –≤–æ–ø—Ä–æ—Å–∞-—Å–ª–æ–≤–∞—Ä—è –±–µ—Ä–µ–º —Å–∞–º –≤–æ–ø—Ä–æ—Å –∏ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
    question_body = question_dict["sentence"]
    question_variants = question_dict["variants"]
    variants = generate_var_string(question_variants)

    # –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∏–ª–∏ –Ω–µ—Ç –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –ø—Ä–∏ –≤–µ—Ä–Ω–æ–º –æ—Ç–≤–µ—Ç–µ
    question_explanation = ""
    answer = session_state["question_dict"]["answers"][0]
    if random.choice([True, False, False]):
        question_explanation = session_state["question_dict"]["explanation"]
        question_explanation = f'–û—Ç–≤–µ—Ç: {answer}. -  {question_explanation}'

    # –ü–æ–¥—Å—á—ë—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞ –∏ –µ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    score = session_state["attempt"] + 1
    cur_scores = update_scores(user_id, session_id, score)
    allscores = cur_scores["allscores"]
    sessionscore = cur_scores["sessionscore"]
    cur_rating = f'\n\nüèÖ–í–∞—à —Ä–µ–π—Ç–∏–Ω–≥:\n–û–±—â–∏–π: {allscores}\n–í —ç—Ç–æ–π –∏–≥—Ä–µ: {sessionscore}'

    # –ï—Å–ª–∏ –ø–µ—Ä–≤—ã–π –≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç, —Ç–æ –ø–æ–∑–¥—Ä–∞–≤–∏–º —Å —ç—Ç–∏–º
    if 1 <= cur_scores["allscores"] <= 2:
        nicesentence = f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–µ—Ä–≤—ã–º –≤–µ—Ä–Ω—ã–º –æ—Ç–≤–µ—Ç–æ–º! –û—Ç–ª–∏—á–Ω–æ–µ –Ω–∞—á–∞–ª–æ. –£ —Ç–µ–±—è {decl_scores(sessionscore)}.'
        question_explanation = ''
    # –ï—Å–ª–∏ –±–∞–ª–ª–æ–≤ –±–æ–ª—å—à–µ 5 –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∂–¥–æ–µ 4-–µ –∏–ª–∏ 5-–µ
    elif sessionscore > 5 and message_id % random.choice([4, 5]) == 0:
        cur_rating = ''
        sayrating = random.choice(
            [f'–î–≤–∏–∂–µ—à—å—Å—è —É–≤–µ—Ä–µ–Ω–Ω–æ –≤–ø–µ—Ä—ë–¥. –¢—ã –Ω–∞–±—Ä–∞–ª {decl_scores(sessionscore)} –∑–∞ –∏–≥—Ä—É –∏ {decl_scores(allscores)} –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è.',
             f'–°–µ–π—á–∞—Å —É —Ç–µ–±—è {decl_scores(sessionscore)} –∑–∞ –∏–≥—Ä—É –∏ {decl_scores(allscores)} –≤ —Ü–µ–ª–æ–º. –û—á–µ–Ω—å –Ω–µ–ø–ª–æ—Ö–æ!',
             f'–ü–æ—Ä–∞–∂–∞—é—Å—å —Ç–≤–æ–µ–π —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω–æ—Å—Ç–∏. –£ —Ç–µ–±—è –∑–∞ –∏–≥—Ä—É {decl_scores(sessionscore)} –∏ –≤—Å–µ–≥–æ {decl_scores(allscores)}',
             f'–Ø –≤–µ—Ä–∏–ª–∞ –≤ —Ç–µ–±—è –Ω–µ –∑—Ä—è! –¢—ã –Ω–∞–±—Ä–∞–ª {decl_scores(sessionscore)} –∑–∞ –∏–≥—Ä—É, –∞ –≤—Å–µ–≥–æ {decl_scores(allscores)}.'
             ]
        )


    response: dict = {
            'text': f'üëç{nicesentence}\n{question_explanation}\n{sayrating}\n{letsnext}.\n‚ú®{question_body} \n{postsentence}:\n{variants}{cur_rating}'.replace(" - ", "").replace("+", ""),
            'tts': f'{correctsound}sil <[50]>{nicesentence}{question_explanation} sil <[100]> {sayrating} sil <[100]>{letsnext}sil <[100]>{tts_prompt_sound(question_body)}sil <[50]>.{postsentence}:sil <[50]>{variants}',
            'buttons': generate_var_buttons(question_variants),
            'end_session': 'False'
    }
    print("From correctanswer")
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å, –∞ —Ç–∞–∫–∂–µ –æ—Ç–¥–∞–µ–º –≤ session_state –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —É—á—ë—Ç–∞
    return {
        "response": response,
        "analytics": {
            "events": [
                {
                    "name": "–í–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç",
                    "value": {
                        "–í–æ–ø—Ä–æ—Å": session_state["question_dict"]["sentence"],
                        "–û—Ç–≤–µ—Ç": command
                        }
                },
                {
                    "name": "–ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å",
                    "value": {
                        "–í–æ–ø—Ä–æ—Å": question_body,
                    }
                },
            ]
        },
        "session_state": {
            "question_dict": question_dict,
            "attempt": 1
        }
    }
